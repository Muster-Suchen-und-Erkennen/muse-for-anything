@tailwind base;
@tailwind components;
@tailwind utilities;

@import url("/node_modules/prosemirror-view/style/prosemirror.css");
@import url("/node_modules/prosemirror-gapcursor/style/gapcursor.css");
@import url("/node_modules/katex/dist/katex.min.css");


@layer utilities {
    /* card shadow */
    .shadow-card {
        --tw-shadow: 0 1px 6px 0px rgba(0, 0, 0, 0.25), 0 2px 4px -1px rgba(0, 1, 0, 0.1);
        box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    }
    /* default-colors */
    .text-default {
        color: var(--text-color, black);
    }
    .text-alt-default {
        color: var(--text-alt-color, black);
    }
    .bg-default {
        background-color: var(--background-color);
    }
    .border-default {
        border-color: var(--border-color, gray);
    }
    .bg-default-alt {
        background-color: var(--background-alt-color);
    }
    .border-default-alt {
        border-color: var(--border-alt-color, gray);
    }
    /* colors for svg use */
    .svg-bg-default-alt {
        fill: var(--background-alt-color);
    }
    .svg-border-default-alt {
        stroke: var(--border-alt-color, gray);
    }
    .svg-border-text {
        stroke: var(--text-color);
    }
    .svg-bg-accent {
        fill: var(--accent-color);
    }
    .svg-border-accent {
        stroke: var(--accent-color);
    }
    .svg-bg-accent-light {
        fill: var(--accent-light-color);
    }
    .svg-border-accent-light {
        stroke: var(--accent-light-color);
    }
    /* default primary */
    .bg-primary {
        background-color: var(--primary-color);
    }
    .text-primary {
        color: var(--text-primary-color);
    }
    .border-primary {
        border-color: var(--primary-color);
    }
    .from-primary {
        --tw-gradient-from: var(--primary-color);
        --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgba(0, 0, 0, 0));
    } 
    .to-primary {
        --tw-gradient-to: var(--primary-color);
    }
    /* light primary */
    .bg-primary-light {
        background-color: var(--primary-light-color, var(--primary-color));
    }
    .text-primary-light {
        color: var(--primary-light-color, var(--primary-color));
    }
    .border-primary-light {
        border-color: var(--primary-light-color, var(--primary-color));
    }
    .from-primary-light {
        --tw-gradient-from: var(--primary-light-color, var(--primary-color));
        --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgba(0, 0, 0, 0));
    } 
    .to-primary-light {
        --tw-gradient-to: var(--primary-light-color, var(--primary-color));
    }
    /* dark primary */
    .bg-primary-dark {
        background-color: var(--primary-dark-color, var(--primary-color));
    }
    .text-primary-dark {
        color: var(--primary-dark-color, var(--primary-color));
    }
    .border-primary-dark {
        border-color: var(--primary-dark-color, var(--primary-color));
    }
    .from-primary-dark {
        --tw-gradient-from: var(--primary-dark-color, var(--primary-color));
        --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgba(0, 0, 0, 0));
    } 
    .to-primary-dark {
        --tw-gradient-to: var(--primary-dark-color, var(--primary-color));
    }
    /* default accent */
    .bg-accent {
        background-color: var(--accent-color);
    }
    .text-accent {
        color: var(--accent-color);
    }
    .border-accent {
        border-color: var(--accent-color);
    }
    .from-accent {
        --tw-gradient-from: var(--accent-color);
        --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgba(0, 0, 0, 0));
    }
    .to-accent {
        --tw-gradient-to: var(--accent-color);
    }
    /* light accent */
    .bg-accent-light {
        background-color: var(--accent-light-color, var(--accent-color));
    }
    .text-accent-light {
        color: var(--accent-light-color, var(--accent-color));
    }
    .border-accent-light {
        border-color: var(--accent-light-color, var(--accent-color));
    }
    .from-accent-light {
        --tw-gradient-from: var(--accent-light-color, var(--accent-color));
        --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgba(0, 0, 0, 0));
    }
    .to-accent-light {
        --tw-gradient-to: var(--accent-light-color, var(--accent-color));
    }
    /* dark accent */
    .bg-accent-dark {
        background-color: var(--accent-dark-color, var(--accent-color));
    }
    .text-accent-dark {
        color: var(--accent-dark-color, var(--accent-color));
    }
    .border-accent-dark {
        border-color: var(--accent-dark-color, var(--accent-color));
    }
    .from-accent-dark {
        --tw-gradient-from: var(--accent-dark-color, var(--accent-color));
        --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgba(0, 0, 0, 0));
    }
    .to-accent-dark {
        --tw-gradient-to: var(--accent-dark-color, var(--accent-color));
    }
}

:root {
    --primary-color: theme("colors.purple.700");
    --primary-light-color: theme("colors.purple.500");
    --primary-extra-light-color: theme("colors.purple.300");
    --primary-dark-color: theme("colors.purple.900");
    --accent-color: theme("colors.yellow.600");
    --accent-light-color: theme("colors.yellow.400");
    --accent-dark-color: theme("colors.yellow.800");
    --text-color: theme("colors.black");
    --text-alt-color: theme("colors.gray.800");
    --text-primary-color: var(--primary-color);
    --text-primary-light-color: var(--primary-light-color);
    --text-primary-dark-color: var(--primary-dark-color);
    --background-color: theme("colors.white");
    --background-alt-color: theme("colors.gray.200");
    --border-color: theme("colors.gray.200");
    --font: theme("fontFamily.serif");
    --font-mono: theme("fontFamily.mono");
    --font-size: theme("fontSize.base");
}

.dark {
    --primary-color: theme("colors.purple.600");
    --primary-light-color: theme("colors.purple.400");
    --primary-extra-light-color: theme("colors.purple.200");
    --primary-dark-color: theme("colors.purple.800");
    --accent-color: theme("colors.yellow.600");
    --accent-light-color: theme("colors.yellow.400");
    --accent-dark-color: theme("colors.yellow.800");
    --text-color: theme("colors.white");
    --text-alt-color: theme("colors.gray.200");
    --text-primary-color: theme("colors.purple.400");
    --text-primary-light-color: theme("colors.purple.200");
    --text-primary-dark-color: theme("colors.purple.600");
    --background-color: theme("colors.gray.800");
    --background-alt-color: theme("colors.gray.700");
    --border-color: theme("colors.gray.600");
    --font: theme("fontFamily.serif");
    --font-mono: theme("fontFamily.mono");
    --font-size: theme("fontSize.base");
}

body {
    min-height: 100vh;
    margin: 0;
}

.main {
    min-height: 100vh;
    display: grid;
    grid-template-columns: 5rem 15rem 1fr;
    grid-template-rows: 3rem 1fr;
    grid-template-areas: "header header header" "nav sidebar content";
}

header {
    grid-area: header;
}

nav {
    grid-area: nav;
}

.sidebar {
    grid-area: sidebar;
}

main {
    grid-area: content;
}

.w-min {
    width: min-content;
}

.gap1 {
    gap: var(--spacing-extra-small);
}

a[aria-disabled] {
    pointer-events: none;
    color: theme("colors.gray.500");
    text-decoration: none;
}

button:disabled {
    pointer-events: none;
    text-decoration: none;
}

/* Taxonomy Graph styles */

taxonomy-graph {
    contain: content;
    min-height: 60vh;
    display: grid;
    grid-template-columns: minmax(8rem, 1fr) 1.5fr minmax(12rem, 2fr); 
    grid-template-rows: 4rem minmax(4rem, 1fr) minmax(4rem, 2fr) 8rem;
    grid-template-areas: "buttons buttons buttons" ". . ." ". . form" "minimap . form"; /*  "empty empty empty empty" "empty empty form form" "minimap empty form form" */
}

taxonomy-graph[data-maximized] {
    position: absolute;
    top: 0px;
    bottom: 0px;
    left: 0px;
    right: 0px;
    border-radius: 0px;
    margin-bottom: 0px;
    grid-template-columns: minmax(8rem, 1fr) 2.5fr minmax(12rem, 2fr); 
}

taxonomy-graph .graph {
    grid-row-start: 1;
    grid-row-end: -1;
    grid-column-start: 1;
    grid-column-end: -1;
}

taxonomy-graph .buttons {
    grid-area: buttons;
}

taxonomy-graph .minimap {
    grid-area: minimap;
}

taxonomy-graph .form {
    grid-area: form;
}

/* Autocomplete styles */
.autocomplete-parent .autocomplete-options {
    display: none;
}

.autocomplete-parent:focus-within .autocomplete-options {
    display: initial;
}

/* Details element styling */
  
summary {
    /*position: relative;*/
    cursor: pointer;
    display: flex;
    align-items: baseline;
}
  
summary:before {
    content: '';
    border-width: .3rem;
    border-style: solid;
    border-color: transparent transparent transparent var(--text-color, black);
    transform: rotate(0);
    transform-origin: .2rem 50%;
    transition: .25s transform ease;
}

details[open] > summary:before {
    transform: rotate(90deg);
}

details summary::-webkit-details-marker {
    display:none;
}

/* Utitlities for limiting block height */
.block-max-3l {
    max-height: 4.5em;
}
.block-max-5l {
    max-height: 7em;
}
.block-max-3l:where(:not(.overflow-y-hidden)) {
    overflow-y: scroll;
}
.block-max-5l:where(:not(.overflow-y-hidden)) {
    overflow-y: scroll;
}
.block-max-3l:where(.overflow-y-hidden) {
    -webkit-line-clamp: 3;
}
.block-max-5l:where(.overflow-y-hidden) {
    -webkit-line-clamp: 5;
}

p:where(.block-max-3l:not(.overflow-y-hidden),.block-max-5l:not(.overflow-y-hidden)) {
    display: inline-block;
}
.overflow-y-hidden:where(.block-max-3l,.block-max-5l) {
    display: -webkit-box;
    -webkit-box-orient: vertical;
}

/* Milkdown Styles */
.milkdown .hide {
    display: none;
}

.markdown-container .milkdown {
    margin-inline: 0px;
}

.milkdown-menu-wrapper {
    @apply flex flex-col relative w-full;
}

.milkdown-menu-wrapper > .milkdown {
    @apply p-2;
}

.milkdown-menu-wrapper > .milkdown-menu {
    border: none;
    overflow-x: auto;
    @apply w-full px-2;
}

.milkdown-menu .menu-selector-wrapper {
    border: none;
}
.milkdown-menu .menu-selector-wrapper .menu-selector {
    @apply m-0 dark:text-white;
}
.milkdown-menu .button{
    @apply m-0 dark:text-white;
}
.milkdown-menu .divider{
    @apply my-1 mx-2 dark:text-white;
}

.milkdown-menu .menu-selector-list {
    left: unset !important;
}

.milkdown-cell-point > * {
    padding: 0px;
    transform: translate(-2px, -2px);
}

.milkdown .tooltip > * {
    min-width: 2rem;
    min-height: 2rem;
    @apply flex items-center justify-center
}

.milkdown .tooltip > *:hover {
    background-color: var(--background-color);
}

.milkdown .tooltip > *.active {
    background-color: var(--primary-extra-light-color);
}

.milkdown hr {
    @apply my-2;
}

.milkdown h1 {
    @apply font-extrabold text-3xl mt-2 mb-3;
}

.milkdown h2 {
    @apply font-bold text-2xl mt-2 mb-3;
}

.milkdown h3 {
    @apply font-bold text-xl mt-2 mb-2;
}

.milkdown h4 {
    @apply font-semibold mt-2 mb-2;
}

.milkdown h5 {
    @apply font-light mt-2 mb-2;
}

.milkdown h6 {
    @apply font-extralight mt-2 mb-2;
}

.milkdown .code-inline {
    background-color: var(--background-alt-color);
    @apply p-1 rounded-md;
}

.milkdown .katex::before, .milkdown .katex::after {
    /* TODO use better selector */
    @apply mx-1 opacity-25;
    color: var(--text-color);
    content: "$";
}

.milkdown .math-block .katex::before, .milkdown .math-block .katex::after {
    content: "";
}

.milkdown .code-fence {
    @apply border rounded-md;
}

.milkdown .code-fence:focus-within, .milkdown .code-fence:focus {
    border-color: var(--primary-color);
    background-color: var(--background-alt-color);
}

.milkdown .code-fence pre {
    @apply ml-6;
}

.milkdown .code-fence_selector-list {
    @apply border border-gray-700 rounded-b-md;
}

.milkdown .ProseMirror-selectednode {
    outline: none;
}

.milkdown .math-block.ProseMirror-selectednode > :first-child {
    @apply mt-2 border rounded-md;
    border-color: var(--primary-color);
}

.milkdown .blockquote {
    @apply ml-7 my-2 pl-2 border-l-4 border-primary;
}

.milkdown .bullet-list {
    list-style-type: none;
}

.milkdown .bullet-list .list-item {
    display: flex;
}

.milkdown .bullet-list .list-item_label {
    display: inline-flex;
    justify-content: end;
    @apply w-8 mr-2;
}

.milkdown .ordered-list {
    list-style-type: none;
}

.milkdown .ordered-list .list-item {
    display: flex;
}

.milkdown .ordered-list .list-item_label {
    display: inline-flex;
    justify-content: end;
    @apply w-8 mr-2;
}

.milkdown .bullet-list .task-list-item {
    display: flex;
    position: revert;
}

.milkdown .bullet-list .task-list-item label {
    display: inline-flex;
    justify-content: end;
    align-items: center;
    @apply w-8 mr-2;
}

.milkdown .bullet-list .task-list-item label > div {
    padding: 0px;
}

.milkdown .bullet-list .task-list-item label > input {
    width: 0px;
}

.milkdown .bullet-list .task-list-item > div > .paragraph {
    margin: 0px;
}

.milkdown .footnote-definition {
    display: flex;
    gap: 0.5rem;
}

.milkdown .footnote-definition_content {
    flex-grow: 1;
    display: flex;
    gap: 0.5rem;
}

.milkdown .footnote-definition dt {
    @apply w-8;
}

/* end milkdown styles */

/* Tailwind CSS styles (ignore css errors...) */

/* form styles */
.dirty.error {
    @apply border-red-700 border-2;
}

.dirty.error:focus {
    @apply border-red-700 border-2;
}

.form-field:focus-within .form-title {
    @apply text-primary;
}

.form-container:focus-within > .form-container-title {
    @apply text-primary;
}

/* page content styles */

.content-title {
    @apply px-3 py-3 mb-2 font-bold text-xl;
}

.sidebar-expandable {
    max-height: 3.8em;
    overflow-y: hidden;
}

.sidebar-expandable:hover,.sidebar-expandable:focus,.sidebar-expandable:focus-within {
    overflow-y: visible;
    z-index: 1;
    border: none;
    box-shadow: none;
}

.sidebar-expandable .sidebar-action, .sidebar-expandable .sidebar-link {
    @apply bg-gray-50 dark:bg-gray-900;
}

.sidebar-expandable .sidebar-head {
    margin-bottom: 0px;
}
.sidebar-expandable:not(:hover,:focus,:focus-within) .sidebar-head {
    border: none;
    box-shadow: none;
}
.sidebar-expandable:not(:hover,:focus,:focus-within) .sidebar-action, .sidebar-expandable:not(:hover,:focus,:focus-within) .sidebar-link {
    border: none;
}

.sidebar-head {
    @apply px-3 py-2 bg-gray-200 font-semibold border-b border-default hover:text-primary shadow-md mb-2 dark:bg-gray-700 dark:hover:text-white dark:hover:bg-gray-800;
}

.sidebar-item {
    @apply px-3 py-2 border-b border-default;
}

.sidebar-link {
    @apply px-3 py-2 border-b border-default hover:text-primary dark:hover:text-white dark:hover:bg-gray-800;
}

.sidebar-action {
    @apply px-3 py-2 border-b border-default hover:text-primary dark:hover:text-white dark:hover:bg-gray-800;
}

.sidebar-action.danger {
    @apply text-red-600 hover:text-white hover:bg-red-600 dark:text-red-500 dark:hover:text-white;
}

/* element styles */

.card {
    @apply mb-2 rounded-md shadow-card dark:shadow-none dark:border dark:border-default;
}

/* button styles */

.button-flat-toggle {
    @apply p-1 m-1 rounded-sm hover:bg-gray-100 hover:shadow-sm hover:text-primary dark:hover:bg-gray-700;
}

.button-flat-toggle.active {
    @apply p-1 m-1 rounded-sm bg-gray-100 hover:bg-gray-200 hover:shadow-sm hover:text-primary dark:bg-gray-700 dark:hover:bg-gray-600;
}

.button-flat {
    @apply p-1 m-1 rounded-sm hover:bg-gray-100 hover:shadow-sm hover:text-primary dark:hover:bg-gray-700;
}

.button-flat.danger {
    @apply text-red-600 hover:bg-red-600 hover:text-white dark:text-red-500 dark:hover:text-white;
}

.button-outline {
    @apply p-1 mt-1 mb-1 rounded-md border-2 text-primary border-primary hover:bg-gray-200 dark:hover:bg-gray-700;
}

.button-outline.danger {
    @apply text-red-600 border-red-600 hover:bg-red-600 hover:text-white dark:text-red-500 dark:border-red-500 dark:hover:text-white;
}

.button-outline:disabled {
    @apply text-gray-400 border-gray-400;
}

.button-outline.danger:disabled {
    @apply text-gray-400 border-gray-400;
}

.button-form-r {
    @apply p-1 rounded-r-sm border border-gray-800 dark:bg-gray-700 dark:border-gray-200 hover:bg-gray-200 dark:hover:bg-gray-600;
}


/* link styles */

.link {
    @apply underline text-primary visited:text-accent hover:underline hover:text-primary;
}

.link-hover {
    @apply hover:underline hover:text-primary;
}

/* dialog styles */

.ux-dialog-open .main {
    filter: blur(0.6px);
}

ux-dialog-overlay {
    position:fixed;
    bottom:0;
    left:0;
    top:0;
    right:0;
    opacity:0;
    @apply bg-black;
}

ux-dialog-overlay.active{
    opacity: 0.4;
}

ux-dialog-container{
    display:flex;
    justify-content: center;
    padding-block: 4rem;
    transition:opacity .2s linear;
    opacity:0;
    overflow-x:hidden;
    overflow-y:auto;
    position:fixed;
    top:0;
    bottom: 0;
    right:0;
    left:0;
}

ux-dialog-container.active{
    opacity:1;
}

ux-dialog-container>div{
    display: flex;
    align-items: center;
    min-height: calc(100vh - 8rem);
    height:-moz-fit-content;
    height:-webkit-fit-content;
    height:fit-content;
    margin-top: 0px !important;
    margin-bottom: 0px !important;
}

ux-dialog-container>div>div{
    width:100%;
    display:block;
    min-width: 20rem;
    width:-moz-fit-content;
    width:-webkit-fit-content;
    width:fit-content;
    height:-moz-fit-content;
    height:-webkit-fit-content;
    height:fit-content;
}

ux-dialog-container,ux-dialog-container>div,ux-dialog-container>div>div{
    /*outline:0*/
}

ux-dialog{
    width:100%;
    display:block;
    min-width: 20rem;
    width:-moz-fit-content;
    width:-webkit-fit-content;
    width:fit-content;
    height:-moz-fit-content;
    height:-webkit-fit-content;
    height:fit-content;
    @apply bg-default text-default rounded-md;
}

ux-dialog>ux-dialog-header{
    @apply flex w-full justify-between items-baseline py-1.5 px-2.5 border-b border-gray-300 dark:border-gray-600; 
}

ux-dialog>ux-dialog-header>button{
    @apply order-last justify-self-end; 
}

ux-dialog>ux-dialog-body{
    display:block;
}

ux-dialog>ux-dialog-footer{
    @apply flex justify-end items-baseline p-1 border-t border-gray-300 dark:border-gray-600; 
}

.ux-dialog-open{
    overflow:hidden
}

#mainontology-graph {
    background-color: var(--background-color);
    display: grid; 
    grid-template-columns: 30% 2px 70%; 
    grid-template-rows: 100%; 
    grid-template-areas: 
      "menu-section dragbar menu-graph"; 
    height: 500px;
} 

#dragbar {
    background-color: var(--background-alt-color);
	grid-area: dragbar;
    cursor: ew-resize; 
    width: 1px;
}

#dragbar:hover {
    background-color: var(--primary-color); 
    width: 4px;
}

ontology-graph[data-maximized] {
    position: absolute;
    top: 0px;
    bottom: 0px;
    left: 0px;
    right: 0px;
    border-radius: 0px;
    margin-bottom: 0px;
    grid-template-columns: 30% 2px 70%; 
    height: 100%; 
}

#menu-section {
    display: grid; 
    grid-template-columns: 100%; 
    grid-template-rows: 30% 50% 20%; 
    grid-template-areas: 
        "item-filtersection"
        "item-treesection"
        "item-overview"; 
    grid-area: menu-section; 
}

#item-filtersection { grid-area: item-filtersection; }
#item-treesection { 
    grid-area: item-treesection;
	
}
#item-overview { grid-area: item-overview; }
.menu-graph { grid-area: menu-graph; }

.section-title {
    font-size: small;
}

.section-main-title {
    font-size: small;
    color: white;
    margin-bottom: 5px;
    padding-left: 5px;
}

.detailview-description{
    font-size: small
}

.detailview-title {
    font-size: medium;
}

.section-main-title-draggable {
    cursor: ns-resize; 
}

.section-main-title-draggable:hover {
    background-color: var(--primary-color-light); 
}

.ontology-move{
    display: flex;
    align-items: center;
    justify-content: center;
}

.ontology-moveBackground{
    border-radius: 50px;
    background: var(--background-alt-color);
    width: 102px;
    margin-left: auto;
    margin-right: auto;
}

.scroll-area {
    overflow: auto;
    height: calc(100% - 24px);
    padding-right: 5px;
}

.button-oneline {
    display: inline-block;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    width: 100%;
}

ul{
    list-style-type:none;
    margin:0;
}

tree-node  ul:first-child{
    padding-left:0;
}

.StartOfTreeNode > tree-node > .StartOfTreeNode{
    padding-left:30px;
}
      
.left{
    float:left;
}

.EachMiniQueueWithOutCollapse {
    flex-direction: row;
    display: flex;
    align-items: center;
}
 
.eachMinQueueCheckSection{
    margin-right:10px;
    width:10px;
}

.ont-treeview-item {
    margin-left: 10px;
    display: inline-block;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    width: 100%;
}

.ont-treeview-item-highlight {
    color:var(--primary-color-light);
}

.detailview-item {
    display: inline-block;
    overflow: hidden;
    margin-bottom: -10px;
    text-overflow: ellipsis;
    white-space: nowrap;
    width: 100%;
    border-style: solid;
    border-bottom: var(--border-color);
    border-top-width: 1px;
}

table, th, td {
    border: 1px solid lightgray;
    border-collapse: collapse;
  }

#table-info {
    width: 100%;
    white-space: nowrap; 
    table-layout: fixed;
}

.table-info-detail {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    width: 100%;
    padding-left: 5px;
}

.table-info-name {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    width: 40%;
    padding-left: 5px;
}

.ontology-algorithm-label {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    width: 95%;
}

#ontology-loading-indicator {
    display: flex;
    justify-content: center;
    align-items: center;
}

.control-group {
    @apply border rounded-lg p-2 mb-1;
}

.control-group:focus-within {
    @apply border-primary;
}

.detailview {
    max-width: 400px;
}

input[type="checkbox"]:indeterminate {
    content: "\f068";
    color: #2b6daf;
}

.button-list-fixed-position {
    opacity: 10%;
}

.button-list-fixed-position-fixed {
    opacity: 100%;
}


.button-list-fixed-position:hover {
    opacity: 80%;
}

/* style scrollbar */
::-webkit-scrollbar {
    width: max(0.35rem, 8px);
    height: max(0.35rem, 8px);
}
::-webkit-scrollbar-track {
    border-radius: calc(max(0.35rem, 8px)/2);
    @apply bg-neutral-200 dark:bg-neutral-600;
}
::-webkit-scrollbar-thumb {
    border-radius: calc(max(0.35rem, 8px)/2);
    @apply bg-neutral-500 border-solid border-2 border-neutral-200 dark:bg-neutral-400 dark:border-neutral-600;
}
::-webkit-scrollbar-thumb:hover {
    @apply bg-neutral-800 border dark:bg-neutral-200;
}

/* toogle switch */
.switch-input {
    display: inline-flex;
    align-items: baseline;
    gap: 0.3em;
    max-width: 100%;
}

.switch-label {
    white-space: normal;
}

.switch {
    position: relative;
    display: inline-block;
    width: 30px;
    height: 18px;
    flex-shrink: 0;
}
  
.switch input { 
    opacity: 0;
    width: 0;
    height: 0;
}

.slider {
    position: absolute;
    cursor: pointer;
    top: 4px;
    left: 0;
    right: 0;
    height: 18px;
    -webkit-transition: .4s; 
    transition: .4s;
    @apply bg-neutral-300 dark:bg-neutral-700;
}

.slider:before {
    position: absolute;
    content: "";
    height: 13px;
    width: 13px;
    left: 2px;
    top: 2.5px;
    background-color: white;
    -webkit-transition: .4s;
    transition: .4s;
    @apply bg-white dark:bg-neutral-300;
}

input:checked + .slider {
    background-color: #2196F3;
}

input:focus + .slider {
    box-shadow: 0 0 1px #2196F3;
}

input:checked + .slider:before {
    -webkit-transform: translateX(13px);
    -ms-transform: translateX(13px);
    transform: translateX(13px);
}

/* Rounded sliders */
.slider.round {
    border-radius: 17px;
}

.slider.round:before {
    border-radius: 50%;
}

.range-slider {
    display: inline-flex;
    width: 100%;
    align-items: center;
    gap: 0.3em;
}

.range-slider input[type=range] {
    min-width: 50px;
    flex-grow: 1;
    flex-shrink: 1;
}
