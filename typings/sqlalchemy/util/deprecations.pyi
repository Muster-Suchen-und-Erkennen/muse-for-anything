"""
This type stub file was generated by pyright.
"""

"""Helpers related to deprecation of functions, methods, classes, other
functionality."""
def warn_deprecated(msg, stacklevel=...):
    ...

def warn_deprecated_limited(msg, args, stacklevel=...):
    """Issue a deprecation warning with a parameterized string,
    limiting the number of registrations.

    """
    ...

def warn_pending_deprecation(msg, stacklevel=...):
    ...

def deprecated_cls(version, message, constructor=...):
    ...

def deprecated(version, message=..., add_deprecation_to_docstring=...):
    """Decorates a function and issues a deprecation warning on use.

    :param version:
      Issue version in the warning.

    :param message:
      If provided, issue message in the warning.  A sensible default
      is used if not provided.

    :param add_deprecation_to_docstring:
      Default True.  If False, the wrapped function's __doc__ is left
      as-is.  If True, the 'message' is prepended to the docs if
      provided, or sensible default if message is omitted.

    """
    ...

def deprecated_params(**specs):
    """Decorates a function to warn on use of certain parameters.

    e.g. ::

        @deprecated_params(
            weak_identity_map=(
                "0.7",
                "the :paramref:`.Session.weak_identity_map parameter "
                "is deprecated."
            )

        )

    """
    ...

def pending_deprecation(version, message=..., add_deprecation_to_docstring=...):
    """Decorates a function and issues a pending deprecation warning on use.

    :param version:
      An approximate future version at which point the pending deprecation
      will become deprecated.  Not used in messaging.

    :param message:
      If provided, issue message in the warning.  A sensible default
      is used if not provided.

    :param add_deprecation_to_docstring:
      Default True.  If False, the wrapped function's __doc__ is left
      as-is.  If True, the 'message' is prepended to the docs if
      provided, or sensible default if message is omitted.
    """
    ...

def deprecated_option_value(parameter_value, default_value, warning_text):
    ...

