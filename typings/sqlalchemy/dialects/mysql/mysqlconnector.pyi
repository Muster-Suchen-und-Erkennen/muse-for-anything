"""
This type stub file was generated by pyright.
"""

from .base import BIT, MySQLCompiler, MySQLDialect, MySQLExecutionContext, MySQLIdentifierPreparer
from ... import util

r"""
.. dialect:: mysql+mysqlconnector
    :name: MySQL Connector/Python
    :dbapi: myconnpy
    :connectstring: mysql+mysqlconnector://<user>:<password>@<host>[:<port>]/<dbname>
    :url: https://pypi.org/project/mysql-connector-python/

.. note::

    The MySQL Connector/Python DBAPI has had many issues since its release,
    some of which may remain unresolved, and the mysqlconnector dialect is
    **not tested as part of SQLAlchemy's continuous integration**.
    The recommended MySQL dialects are mysqlclient and PyMySQL.

"""
class MySQLExecutionContext_mysqlconnector(MySQLExecutionContext):
    def get_lastrowid(self):
        ...
    


class MySQLCompiler_mysqlconnector(MySQLCompiler):
    def visit_mod_binary(self, binary, operator, **kw):
        ...
    
    def post_process_text(self, text):
        ...
    
    def escape_literal_column(self, text):
        ...
    


class MySQLIdentifierPreparer_mysqlconnector(MySQLIdentifierPreparer):
    ...


class _myconnpyBIT(BIT):
    def result_processor(self, dialect, coltype):
        """MySQL-connector already converts mysql bits, so."""
        ...
    


class MySQLDialect_mysqlconnector(MySQLDialect):
    driver = ...
    supports_unicode_binds = ...
    supports_sane_rowcount = ...
    supports_sane_multi_rowcount = ...
    supports_native_decimal = ...
    default_paramstyle = ...
    execution_ctx_cls = ...
    statement_compiler = ...
    preparer = ...
    colspecs = ...
    def __init__(self, *arg, **kw) -> None:
        ...
    
    @property
    def description_encoding(self):
        ...
    
    @util.memoized_property
    def supports_unicode_statements(self):
        ...
    
    @classmethod
    def dbapi(cls):
        ...
    
    def do_ping(self, dbapi_connection):
        ...
    
    def create_connect_args(self, url):
        ...
    
    def is_disconnect(self, e, connection, cursor):
        ...
    
    _isolation_lookup = ...


dialect = MySQLDialect_mysqlconnector
