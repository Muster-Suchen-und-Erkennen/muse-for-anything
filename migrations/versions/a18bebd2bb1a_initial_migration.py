"""Initial migration.

Revision ID: a18bebd2bb1a
Create Date: 2021-09-19 20:16:31.258752
"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "a18bebd2bb1a"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "Namespace",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.Unicode(), nullable=False),
        sa.Column("description", sa.UnicodeText(), nullable=True),
        sa.Column("created_on", sa.DateTime(), nullable=False),
        sa.Column("deleted_on", sa.DateTime(), nullable=True),
        sa.Column("updated_on", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_Namespace")),
    )
    with op.batch_alter_table("Namespace", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_Namespace_description"), ["description"], unique=False
        )
        batch_op.create_index(batch_op.f("ix_Namespace_name"), ["name"], unique=True)
        batch_op.create_index(
            "ix_searchNamespace",
            ["name", "description"],
            unique=False,
            mysql_prefix="FULLTEXT",
            postgresql_using="gin",
        )

    op.create_table(
        "Object",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.Unicode(), nullable=False),
        sa.Column("description", sa.UnicodeText(), nullable=True),
        sa.Column("created_on", sa.DateTime(), nullable=False),
        sa.Column("deleted_on", sa.DateTime(), nullable=True),
        sa.Column("updated_on", sa.DateTime(), nullable=False),
        sa.Column("namespace_id", sa.Integer(), nullable=False),
        sa.Column("object_type_id", sa.Integer(), nullable=False),
        sa.Column("current_version_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["current_version_id"],
            ["ObjectVersion.id"],
            name=op.f("fk_Object_current_version_id_ObjectVersion"),
        ),
        sa.ForeignKeyConstraint(
            ["namespace_id"],
            ["Namespace.id"],
            name=op.f("fk_Object_namespace_id_Namespace"),
        ),
        sa.ForeignKeyConstraint(
            ["object_type_id"], ["Type.id"], name=op.f("fk_Object_object_type_id_Type")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_Object")),
    )
    with op.batch_alter_table("Object", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_Object_description"), ["description"], unique=False
        )
        batch_op.create_index(batch_op.f("ix_Object_name"), ["name"], unique=False)

    op.create_table(
        "ObjectVersion",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.Unicode(), nullable=False),
        sa.Column("description", sa.UnicodeText(), nullable=True),
        sa.Column("created_on", sa.DateTime(), nullable=False),
        sa.Column("deleted_on", sa.DateTime(), nullable=True),
        sa.Column("object_id", sa.Integer(), nullable=False),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.Column("object_type_version_id", sa.Integer(), nullable=False),
        sa.Column("data", sa.JSON(), nullable=False),
        sa.ForeignKeyConstraint(
            ["object_id"], ["Object.id"], name=op.f("fk_ObjectVersion_object_id_Object")
        ),
        sa.ForeignKeyConstraint(
            ["object_type_version_id"],
            ["TypeVersion.id"],
            name=op.f("fk_ObjectVersion_object_type_version_id_TypeVersion"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_ObjectVersion")),
    )
    with op.batch_alter_table("ObjectVersion", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_ObjectVersion_description"), ["description"], unique=False
        )
        batch_op.create_index(batch_op.f("ix_ObjectVersion_name"), ["name"], unique=False)
        batch_op.create_index(
            "ix_uq_version_ObjectVersion", ["object_id", "version"], unique=True
        )

    op.create_table(
        "TaxonomyItem",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_on", sa.DateTime(), nullable=False),
        sa.Column("deleted_on", sa.DateTime(), nullable=True),
        sa.Column("updated_on", sa.DateTime(), nullable=False),
        sa.Column("taxonomy_id", sa.Integer(), nullable=False),
        sa.Column("current_version_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["current_version_id"],
            ["TaxonomyItemVersion.id"],
            name=op.f("fk_TaxonomyItem_current_version_id_TaxonomyItemVersion"),
        ),
        sa.ForeignKeyConstraint(
            ["taxonomy_id"],
            ["Taxonomy.id"],
            name=op.f("fk_TaxonomyItem_taxonomy_id_Taxonomy"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_TaxonomyItem")),
    )
    op.create_table(
        "TaxonomyItemVersion",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.Unicode(), nullable=False),
        sa.Column("description", sa.UnicodeText(), nullable=True),
        sa.Column("created_on", sa.DateTime(), nullable=False),
        sa.Column("deleted_on", sa.DateTime(), nullable=True),
        sa.Column("taxonomy_item_id", sa.Integer(), nullable=False),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.Column("sort_key", sa.Float(), nullable=True),
        sa.ForeignKeyConstraint(
            ["taxonomy_item_id"],
            ["TaxonomyItem.id"],
            name=op.f("fk_TaxonomyItemVersion_taxonomy_item_id_TaxonomyItem"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_TaxonomyItemVersion")),
    )
    with op.batch_alter_table("TaxonomyItemVersion", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_TaxonomyItemVersion_description"),
            ["description"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_TaxonomyItemVersion_name"), ["name"], unique=False
        )
        batch_op.create_index(
            "ix_searchTaxonomyItemVersion",
            ["name", "description"],
            unique=False,
            mysql_prefix="FULLTEXT",
            postgresql_using="gin",
        )
        batch_op.create_index(
            "ix_uq_version_TaxonomyItemVersion",
            ["taxonomy_item_id", "version"],
            unique=True,
        )

    op.create_table(
        "Type",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.Unicode(), nullable=False),
        sa.Column("description", sa.UnicodeText(), nullable=True),
        sa.Column("created_on", sa.DateTime(), nullable=False),
        sa.Column("deleted_on", sa.DateTime(), nullable=True),
        sa.Column("updated_on", sa.DateTime(), nullable=False),
        sa.Column("namespace_id", sa.Integer(), nullable=False),
        sa.Column("current_version_id", sa.Integer(), nullable=True),
        sa.Column("is_toplevel_type", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["current_version_id"],
            ["TypeVersion.id"],
            name=op.f("fk_Type_current_version_id_TypeVersion"),
        ),
        sa.ForeignKeyConstraint(
            ["namespace_id"],
            ["Namespace.id"],
            name=op.f("fk_Type_namespace_id_Namespace"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_Type")),
    )
    with op.batch_alter_table("Type", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_Type_description"), ["description"], unique=False
        )
        batch_op.create_index(batch_op.f("ix_Type_name"), ["name"], unique=False)
        batch_op.create_index(
            "ix_searchType",
            ["name", "description"],
            unique=False,
            mysql_prefix="FULLTEXT",
            postgresql_using="gin",
        )

    op.create_table(
        "TypeVersion",
        sa.Column("created_on", sa.DateTime(), nullable=False),
        sa.Column("deleted_on", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("object_type_id", sa.Integer(), nullable=False),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.Column("data", sa.JSON(), nullable=False),
        sa.ForeignKeyConstraint(
            ["object_type_id"],
            ["Type.id"],
            name=op.f("fk_TypeVersion_object_type_id_Type"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_TypeVersion")),
    )
    with op.batch_alter_table("TypeVersion", schema=None) as batch_op:
        batch_op.create_index(
            "ix_uq_version_TypeVersion", ["object_type_id", "version"], unique=True
        )

    op.create_table(
        "User",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_on", sa.DateTime(), nullable=False),
        sa.Column("deleted_on", sa.DateTime(), nullable=True),
        sa.Column("username", sa.String(length=120), nullable=True),
        sa.Column("e_mail", sa.Text(), nullable=True),
        sa.Column("password", sa.String(length=120), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_User")),
    )
    with op.batch_alter_table("User", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_User_e_mail"), ["e_mail"], unique=True)
        batch_op.create_index(batch_op.f("ix_User_username"), ["username"], unique=True)

    op.create_table(
        "ObjectVersionToObject",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("object_version_source_id", sa.Integer(), nullable=False),
        sa.Column("object_target_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["object_target_id"],
            ["Object.id"],
            name=op.f("fk_ObjectVersionToObject_object_target_id_Object"),
        ),
        sa.ForeignKeyConstraint(
            ["object_version_source_id"],
            ["ObjectVersion.id"],
            name=op.f("fk_ObjectVersionToObject_object_version_source_id_ObjectVersion"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_ObjectVersionToObject")),
    )
    op.create_table(
        "ObjectVersionToTaxonomyItem",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("object_version_source_id", sa.Integer(), nullable=False),
        sa.Column("taxonomy_item_target_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["object_version_source_id"],
            ["ObjectVersion.id"],
            name=op.f(
                "fk_ObjectVersionToTaxonomyItem_object_version_source_id_ObjectVersion"
            ),
        ),
        sa.ForeignKeyConstraint(
            ["taxonomy_item_target_id"],
            ["TaxonomyItem.id"],
            name=op.f(
                "fk_ObjectVersionToTaxonomyItem_taxonomy_item_target_id_TaxonomyItem"
            ),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_ObjectVersionToTaxonomyItem")),
    )
    op.create_table(
        "Taxonomy",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.Unicode(), nullable=False),
        sa.Column("description", sa.UnicodeText(), nullable=True),
        sa.Column("created_on", sa.DateTime(), nullable=False),
        sa.Column("deleted_on", sa.DateTime(), nullable=True),
        sa.Column("updated_on", sa.DateTime(), nullable=False),
        sa.Column("namespace_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["namespace_id"],
            ["Namespace.id"],
            name=op.f("fk_Taxonomy_namespace_id_Namespace"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_Taxonomy")),
    )
    with op.batch_alter_table("Taxonomy", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_Taxonomy_description"), ["description"], unique=False
        )
        batch_op.create_index(batch_op.f("ix_Taxonomy_name"), ["name"], unique=False)

    op.create_table(
        "TaxonomyItemRelation",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_on", sa.DateTime(), nullable=False),
        sa.Column("deleted_on", sa.DateTime(), nullable=True),
        sa.Column("taxonomy_item_source_id", sa.Integer(), nullable=False),
        sa.Column("taxonomy_item_target_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["taxonomy_item_source_id"],
            ["TaxonomyItem.id"],
            name=op.f("fk_TaxonomyItemRelation_taxonomy_item_source_id_TaxonomyItem"),
        ),
        sa.ForeignKeyConstraint(
            ["taxonomy_item_target_id"],
            ["TaxonomyItem.id"],
            name=op.f("fk_TaxonomyItemRelation_taxonomy_item_target_id_TaxonomyItem"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_TaxonomyItemRelation")),
    )
    op.create_table(
        "TypeVersionToType",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("type_version_source_id", sa.Integer(), nullable=False),
        sa.Column("type_target_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["type_target_id"],
            ["Type.id"],
            name=op.f("fk_TypeVersionToType_type_target_id_Type"),
        ),
        sa.ForeignKeyConstraint(
            ["type_version_source_id"],
            ["TypeVersion.id"],
            name=op.f("fk_TypeVersionToType_type_version_source_id_TypeVersion"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_TypeVersionToType")),
    )
    op.create_table(
        "TypeVersionToTypeVersion",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("type_version_source_id", sa.Integer(), nullable=False),
        sa.Column("type_version_target_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["type_version_source_id"],
            ["TypeVersion.id"],
            name=op.f("fk_TypeVersionToTypeVersion_type_version_source_id_TypeVersion"),
        ),
        sa.ForeignKeyConstraint(
            ["type_version_target_id"],
            ["TypeVersion.id"],
            name=op.f("fk_TypeVersionToTypeVersion_type_version_target_id_TypeVersion"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_TypeVersionToTypeVersion")),
    )
    op.create_table(
        "UserGrant",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("role", sa.String(length=64), nullable=True),
        sa.Column("resource_type", sa.String(length=64), nullable=True),
        sa.Column("resource_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"], ["User.id"], name=op.f("fk_UserGrant_user_id_User")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_UserGrant")),
    )
    with op.batch_alter_table("UserGrant", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_UserGrant_resource_id"), ["resource_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_UserGrant_resource_type"), ["resource_type"], unique=False
        )
        batch_op.create_index(batch_op.f("ix_UserGrant_role"), ["role"], unique=False)

    op.create_table(
        "UserNamespace",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("namespace_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["namespace_id"],
            ["Namespace.id"],
            name=op.f("fk_UserNamespace_namespace_id_Namespace"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["User.id"], name=op.f("fk_UserNamespace_user_id_User")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_UserNamespace")),
    )
    op.create_table(
        "UserRole",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("role", sa.String(length=64), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"], ["User.id"], name=op.f("fk_UserRole_user_id_User")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_UserRole")),
    )
    op.create_table(
        "TypeVersionToTaxonomy",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("type_version_source_id", sa.Integer(), nullable=False),
        sa.Column("taxonomy_target_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["taxonomy_target_id"],
            ["Taxonomy.id"],
            name=op.f("fk_TypeVersionToTaxonomy_taxonomy_target_id_Taxonomy"),
        ),
        sa.ForeignKeyConstraint(
            ["type_version_source_id"],
            ["TypeVersion.id"],
            name=op.f("fk_TypeVersionToTaxonomy_type_version_source_id_TypeVersion"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_TypeVersionToTaxonomy")),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("TypeVersionToTaxonomy")
    op.drop_table("UserRole")
    op.drop_table("UserNamespace")
    with op.batch_alter_table("UserGrant", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_UserGrant_role"))
        batch_op.drop_index(batch_op.f("ix_UserGrant_resource_type"))
        batch_op.drop_index(batch_op.f("ix_UserGrant_resource_id"))

    op.drop_table("UserGrant")
    op.drop_table("TypeVersionToTypeVersion")
    op.drop_table("TypeVersionToType")
    op.drop_table("TaxonomyItemRelation")
    with op.batch_alter_table("Taxonomy", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_Taxonomy_name"))
        batch_op.drop_index(batch_op.f("ix_Taxonomy_description"))

    op.drop_table("Taxonomy")
    op.drop_table("ObjectVersionToTaxonomyItem")
    op.drop_table("ObjectVersionToObject")
    with op.batch_alter_table("User", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_User_username"))
        batch_op.drop_index(batch_op.f("ix_User_e_mail"))

    op.drop_table("User")
    with op.batch_alter_table("TypeVersion", schema=None) as batch_op:
        batch_op.drop_index("ix_uq_version_TypeVersion")

    op.drop_table("TypeVersion")
    with op.batch_alter_table("Type", schema=None) as batch_op:
        batch_op.drop_index("ix_searchType")
        batch_op.drop_index(batch_op.f("ix_Type_name"))
        batch_op.drop_index(batch_op.f("ix_Type_description"))

    op.drop_table("Type")
    with op.batch_alter_table("TaxonomyItemVersion", schema=None) as batch_op:
        batch_op.drop_index("ix_uq_version_TaxonomyItemVersion")
        batch_op.drop_index("ix_searchTaxonomyItemVersion")
        batch_op.drop_index(batch_op.f("ix_TaxonomyItemVersion_name"))
        batch_op.drop_index(batch_op.f("ix_TaxonomyItemVersion_description"))

    op.drop_table("TaxonomyItemVersion")
    op.drop_table("TaxonomyItem")
    with op.batch_alter_table("ObjectVersion", schema=None) as batch_op:
        batch_op.drop_index("ix_uq_version_ObjectVersion")
        batch_op.drop_index(batch_op.f("ix_ObjectVersion_name"))
        batch_op.drop_index(batch_op.f("ix_ObjectVersion_description"))

    op.drop_table("ObjectVersion")
    with op.batch_alter_table("Object", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_Object_name"))
        batch_op.drop_index(batch_op.f("ix_Object_description"))

    op.drop_table("Object")
    with op.batch_alter_table("Namespace", schema=None) as batch_op:
        batch_op.drop_index("ix_searchNamespace")
        batch_op.drop_index(batch_op.f("ix_Namespace_name"))
        batch_op.drop_index(batch_op.f("ix_Namespace_description"))

    op.drop_table("Namespace")
    # ### end Alembic commands ###
